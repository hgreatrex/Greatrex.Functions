% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JumpDate.r
\name{JumpDate}
\alias{JumpDate}
\title{JumpDate}
\usage{
JumpDate(
  DateIn = NA,
  TimeJump = NA,
  TimeUnit = NA,
  Direction = "back",
  verbose = FALSE
)
}
\arguments{
\item{DateIn}{An R-Date, or something that can be converted automatically by as.Date}

\item{TimeJump}{Number of units back/forward e.g. 3 days, TimeJump=3}

\item{TimeUnit}{A character string, containing one of "day", "week", "month", "quarter" or "year". This can optionally be preceded by a (positive or negative) integer and a space, or followed by "s".}

\item{Direction}{"back" for back, everything else goes forward}

\item{verbose}{Do you want it to print out what you are doing? Useful for debugging}
}
\value{
Your new date
}
\description{
Personal function to jump forward/backwards X number of days/weeks/months in base R.
Sometimes I don't want to bother with packages
}
\details{
This is a wrapper for \code{\link[seq.Date]{seq.Date()}}
I want to be able to easily move forward and back in time without having to use a package.

See here for other ways to achieve this for example using lubridate and the background to this function
   \href{https://stackoverflow.com/questions/5225823/how-to-subtract-months-from-a-date-in-r}{https://stackoverflow.com/questions/5225823/how-to-subtract-months-from-a-date-in-r}
}
\examples{
# Move 1 month back from 2000-02-29
JumpDate("2000-02-29",2,"months","back")

# Move 14 weeks forward from Jan-1-2002 and print out all output
Ans <- JumpDate(DateIn="2002-01-01",TimeJump=14,TimeUnit="week",Direction="forward",verbose=TRUE)
print(Ans)
}
\seealso{
\code{\link[seq.Date]{seq.Date()}}
}
